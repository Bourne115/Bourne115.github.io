(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{606:function(v,_,t){"use strict";t.r(_);var e=t(14),o=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"前端性能优化的目的是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化的目的是什么"}},[v._v("#")]),v._v(" 前端性能优化的目的是什么？")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("从用户角度而言，优化能够让页面加载得更快、对用户的操作响应得更及时，能够给用户提供更为友好的产品体验")])]),v._v(" "),t("li",[t("p",[v._v("从服务商角度而言，优化能够减少页面请求数、或者减少请求所占带宽，能够节省可观的资源。")])])]),v._v(" "),t("h2",{attrs:{id:"应该从那些方面进行性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应该从那些方面进行性能优化"}},[v._v("#")]),v._v(" 应该从那些方面进行性能优化")]),v._v(" "),t("ul",[t("li",[v._v("网络层面")]),v._v(" "),t("li",[v._v("渲染层面")]),v._v(" "),t("li",[v._v("性能监控")]),v._v(" "),t("li",[v._v("webview")])]),v._v(" "),t("h2",{attrs:{id:"网络层面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络层面"}},[v._v("#")]),v._v(" 网络层面")]),v._v(" "),t("blockquote",[t("p",[v._v("DNS 解析、TCP 连接")])]),v._v(" "),t("ul",[t("li",[v._v("这两个步骤，前端能做的努力非常有限。因此暂不研究。")])]),v._v(" "),t("blockquote",[t("p",[v._v("http 请求/响应有两个大的方向可进行优化")])]),v._v(" "),t("ol",[t("li",[v._v("减少请求次数")]),v._v(" "),t("li",[v._v("减少单次请求所花费的时间")])]),v._v(" "),t("h3",{attrs:{id:"减少请求次数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少请求次数"}},[v._v("#")]),v._v(" 减少请求次数")]),v._v(" "),t("p",[t("strong",[v._v("1.HTTP 缓存机制")])]),v._v(" "),t("blockquote",[t("p",[v._v("如果前端想减少请求次数，可利用好浏览器的 HTTP 缓存机制，HTTP 缓存机制分为强缓存和协商缓存。")])]),v._v(" "),t("blockquote",[t("p",[v._v("浏览器与服务器通信的方式为应答方式，即是：浏览器发起 HTTP 请求 - 服务器响应该请求。那么浏览器第一次向服务器")])]),v._v(" "),t("blockquote",[t("p",[v._v("发起该请求后拿到你请求结果，会根据响应报文中 HTTP 头的缓存标识，决定是否缓存结果。是则将请求结果和缓存标识存入浏览器缓存中。")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://www.rishiqing.com/task/v1/folder/file/url?signature=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXBlIjoidmlldyIsImlhdCI6MTY2MDcyNjQxMCwiZmlsZUlkIjo2OTUzNDExLCJ0aW1lc3RhbXAiOjE2NjA3MjY0MTAzMjd9.VcwvD8BW0BtQFMu1pM4HwbanoNf6pzf8GMX_1XwVOpY",alt:"tu"}})]),v._v(" "),t("p",[v._v("由上图可以看出")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识")])]),v._v(" "),t("li",[t("p",[v._v("浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中")])])]),v._v(" "),t("p",[v._v("以上两点结论就是浏览器缓存机制的关键，他确保了每个请求的缓存存入与读取，只要我们再理解浏览器缓存的使用规则，那么所有的问题就迎刃而解了。为了方便理解，这里根据是否需要向服务器重新发起 HTTP 请求将缓存过程分为两个部分，分别是强制缓存和协商缓存。")]),v._v(" "),t("p",[t("strong",[v._v("强缓存")]),v._v("\n强缓存就是向浏览器缓存查找该请求结果，并根据结果的缓存规则来决定是否能使用该缓存结果的过程。当浏览器向服务器发起请求时，服务器会将")]),v._v(" "),t("p",[v._v("缓存规则放入 HTTP 响应报文的 HTTP 头中和请求结果一起返回给浏览器，控制强缓存的字段分别是 "),t("code",[v._v("Expires")]),v._v(" 和 "),t("code",[v._v("Cache-Control")]),v._v("，其中"),t("code",[v._v("Cache-control")]),v._v("优先级比 Expires 高。")]),v._v(" "),t("p",[v._v("强制缓存的情况主要有三种：")]),v._v(" "),t("ol",[t("li",[v._v("不存在该缓存结果和缓存标识，强制缓存失效，则直接向服务器发起请求（跟第一次发起请求一致）。")]),v._v(" "),t("li",[v._v("存在该缓存结果和缓存标识，但该结果已失效，强制缓存失效，则使用协商缓存。")]),v._v(" "),t("li",[v._v("存在该缓存结果和缓存标识，且改结果尚未失效，强制缓存生效，直接返回该结果。")])]),v._v(" "),t("p",[t("strong",[v._v("协商缓存")]),v._v("\n协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识觉得是否使用缓存的过程，同样，协商缓存")]),v._v(" "),t("p",[v._v("的标识也是在响应报文中的 HTTP 头中和请求结果一起返回给浏览器的，控制协商缓存的字段分别有："),t("code",[v._v("Last-Modified / If-Modified-Since")])]),v._v(" "),t("p",[v._v("和 "),t("code",[v._v("Etag / If-None-Match")]),v._v(",其中"),t("code",[v._v("Etag / If-None-Match")]),v._v("的优先级比"),t("code",[v._v("Last-Modified / If-Modified-Since")]),v._v("高")]),v._v(" "),t("p",[v._v("协商缓存的情况主要有以下两种情况：")]),v._v(" "),t("ol",[t("li",[v._v("协商缓存生效，返回 304")]),v._v(" "),t("li",[v._v("协商缓存失效，返回 200 和请求结果\n"),v._v(" "),t("strong",[v._v("2.MemoryCache")])])]),v._v(" "),t("p",[t("strong",[v._v("3.Service Worker Cache")])]),v._v(" "),t("p",[t("strong",[v._v("4.Push Cache")])]),v._v(" "),t("p",[t("strong",[v._v("5.本地存储")])]),v._v(" "),t("h3",{attrs:{id:"减少单次请求所花费的时间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少单次请求所花费的时间"}},[v._v("#")]),v._v(" 减少单次请求所花费的时间")]),v._v(" "),t("p",[t("strong",[v._v("1.webpack 性能优化调优与 Gzip 原理")])]),v._v(" "),t("p",[t("strong",[v._v("1.图片优化，质量与性能的博弈")])]),v._v(" "),t("p",[t("a",{attrs:{href:"https://naotu.baidu.com/file/d3088dd529bf144277d12ecbc37168dd?token=97d84a8f71655f86",target:"_blank",rel:"noopener noreferrer"}},[v._v("参考 1"),t("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=o.exports}}]);