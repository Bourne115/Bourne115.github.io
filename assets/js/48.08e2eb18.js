(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{608:function(t,e,a){"use strict";a.r(e);var r=a(14),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"受控组件的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#受控组件的概念"}},[t._v("#")]),t._v(" 受控组件的概念：")]),t._v(" "),a("p",[t._v("在 HTML 中，表单元素（如"),a("code",[t._v("<input>")]),t._v("、 "),a("code",[t._v("<textarea>")]),t._v(" 和 "),a("code",[t._v("<select>")]),t._v("）通常自己维护 state，并根据用户输入进行更新。而在 React 中，可变状态（mutable state）通常保存在组件的 state 属性中，并且只能通过使用 setState()来更新。我们可以把两者结合起来，使 React 的 state 成为“唯一数据源”。渲染表单的 React 组件还控制着用户输入过程中表单发生的操作。被 React 以这种方式控制取值的表单输入元素就叫做“受控组件”。")]),t._v(" "),a("h2",{attrs:{id:"非受控组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非受控组件"}},[t._v("#")]),t._v(" 非受控组件：")]),t._v(" "),a("p",[t._v("要编写一个非受控组件，而不是为每个状态更新都编写数据处理函数，你可以 使用 ref 来从 DOM 节点中获取表单数据。")]),t._v(" "),a("h3",{attrs:{id:"特殊的文件file标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊的文件file标签"}},[t._v("#")]),t._v(" 特殊的文件file标签：")]),t._v(" "),a("p",[t._v("另外在input中还有一个比较特殊的情况，那就是file类型的表单控件。\n"),a("strong",[t._v("对于file类型的表单控件它始终是一个不受控制的组件，因为它的值只能由用户设置，而不是以编程方式设置。")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),a("ul",[a("li",[t._v("受控和非受控的区别在于是否把原生的表单中的 state 交给 react组件的state来接管")]),t._v(" "),a("li",[t._v("大多数业务场景都应该使用受控组件（官方也是这么推荐的）")]),t._v(" "),a("li",[t._v("当然如果 input的type是file时，这个时候我们是没办法将其作为受控组件的，因为选择文件本身就是一个非受控的操作，只能获取用户选的文件")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/forms.html#controlled-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("受控组件文档地址："),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/uncontrolled-components.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("非受控组件文档地址："),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);