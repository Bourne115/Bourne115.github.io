(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{585:function(t,_,r){"use strict";r.r(_);var s=r(14),e=Object(s.a)({},(function(){var t=this,_=t.$createElement,r=t._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"k8s基础入门"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#k8s基础入门"}},[t._v("#")]),t._v(" k8s基础入门")]),t._v(" "),r("p",[t._v("第一章 初探kubernetes（K8S）")]),t._v(" "),r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://kubernetes.io/zh/docs/home",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网地址"),r("OutboundLink")],1),t._v("\nkubernetes是2014年谷歌开源的，容器化集群管理系统，简称：k8s。\n谷歌、京东、 360、等大厂都全面拥抱 "),r("code",[t._v("k8s")]),t._v(" 容器化是大势所趋 "),r("code",[t._v("linux")]),t._v(" "),r("code",[t._v("docker")])]),t._v(" "),r("ul",[r("li",[t._v("使用k8s进行容器化应用部署")]),t._v(" "),r("li",[t._v("使用k8s利于应用扩展")]),t._v(" "),r("li",[t._v("使用k8s的目标是让容器化应用更加简洁和高效")])]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"一、优势和特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、优势和特性"}},[t._v("#")]),t._v(" 一、优势和特性：")]),t._v(" "),r("h3",{attrs:{id:"_1-自动装箱"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-自动装箱"}},[t._v("#")]),t._v(" 1.自动装箱")]),t._v(" "),r("blockquote",[r("p",[t._v("基于容器对应用运行环境的资源配置要求自动部署应用容器。")])]),t._v(" "),r("h3",{attrs:{id:"_2-自我修复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-自我修复"}},[t._v("#")]),t._v(" 2.自我修复")]),t._v(" "),r("blockquote",[r("p",[t._v("当容器失败时，会对容器进行重启。\n当所部署的"),r("code",[t._v("Node节点")]),t._v("有问题时，会对容器进行重新部署和重新调度。\n当容器未通过监控检查时，会关闭此容器直到容器正常运行时，才会对外提供服务。")])]),t._v(" "),r("h3",{attrs:{id:"_3-水平扩展"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-水平扩展"}},[t._v("#")]),t._v(" 3.水平扩展")]),t._v(" "),r("blockquote",[r("p",[t._v("通过简单的命令，用户"),r("code",[t._v("UI界面")]),t._v("或基于"),r("code",[t._v("CPU")]),t._v("等资源使用情况。对容器进行规模扩大或规模剪裁。")])]),t._v(" "),r("h3",{attrs:{id:"_4-服务发现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-服务发现"}},[t._v("#")]),t._v(" 4.服务发现")]),t._v(" "),r("blockquote",[r("p",[t._v("用户不需要使用额外的服务发现机制，就能够基于"),r("code",[t._v("Kubernetes")]),t._v("自身能力实现服务发现和负载均衡。")])]),t._v(" "),r("h3",{attrs:{id:"_5-滚动更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-滚动更新"}},[t._v("#")]),t._v(" 5.滚动更新")]),t._v(" "),r("blockquote",[r("p",[t._v("可以根据应用的变化，对应用容器运行的应用，进行一次性或批量更新。")])]),t._v(" "),r("h3",{attrs:{id:"_6-版本回退"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-版本回退"}},[t._v("#")]),t._v(" 6.版本回退")]),t._v(" "),r("blockquote",[r("p",[t._v("可以根据应用部署的情况，对应用容器运行的应用，进行历史版本即时回退。")])]),t._v(" "),r("h3",{attrs:{id:"_7-密钥和配置管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-密钥和配置管理"}},[t._v("#")]),t._v(" 7.密钥和配置管理")]),t._v(" "),r("blockquote",[r("p",[t._v("在不需要重新构建新镜像的情况下，可以部署和更新密钥和应用配置，类似热部署。")])]),t._v(" "),r("h3",{attrs:{id:"_8-存储编排"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-存储编排"}},[t._v("#")]),t._v(" 8.存储编排")]),t._v(" "),r("blockquote",[r("p",[t._v("自动实现存储系统挂载及应用，特别对有状态应用实现数据持久化非常重要。\n存储系统可以来自于本地目录，网络存储（"),r("code",[t._v("NFS")]),t._v("、"),r("code",[t._v("Gluste")]),t._v("、"),r("code",[t._v("Ceph")]),t._v("）等、公共云存储服务。")])]),t._v(" "),r("h3",{attrs:{id:"_9-批处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-批处理"}},[t._v("#")]),t._v(" 9.批处理")]),t._v(" "),r("blockquote",[r("p",[t._v("提供一次性任务，定时任务，满足批量数据处理和 分析的场景")])]),t._v(" "),r("h2",{attrs:{id:"二、k8s的集群架构组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、k8s的集群架构组成"}},[t._v("#")]),t._v(" 二、K8s的集群架构组成：")]),t._v(" "),r("h3",{attrs:{id:"_1-架构图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-架构图"}},[t._v("#")]),t._v(" 1.架构图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://img-blog.csdnimg.cn/167ccc2034e445b3a2a1f5ce84d49b68.png",width:"80%"}})]),t._v(" "),r("h3",{attrs:{id:"_2-master-node-主控节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-master-node-主控节点"}},[t._v("#")]),t._v(" 2.Master Node（主控节点）")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("api-server")]),t._v(" ：集群统一入口，以restful风格来请求，然后交给etcd存储")]),t._v(" "),r("li",[r("strong",[t._v("scheduler")]),t._v(" ：节点调度，选择node节点应用部署")]),t._v(" "),r("li",[r("strong",[t._v("controller-manager")]),t._v(" ：处理集群中常规后台任务，资源控制，一个资源对应一个控制器")]),t._v(" "),r("li",[r("strong",[t._v("etcd")]),t._v("：是兼具一致性和高可用性的键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库。用于报存集群相关的数据")])]),t._v(" "),r("h3",{attrs:{id:"_3-work-node-工作节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-work-node-工作节点"}},[t._v("#")]),t._v(" 3.Work Node（工作节点）")]),t._v(" "),r("ul",[r("li",[t._v("**kubelet **："),r("code",[t._v("master 节点")]),t._v("派到 "),r("code",[t._v("node节点")]),t._v("的代表，管理本机容器的各种操作（创建、生命周期、）")]),t._v(" "),r("li",[r("strong",[t._v("kube-proxy")]),t._v("：  提供网络代理、负载均衡等操作")]),t._v(" "),r("li",[r("strong",[t._v("Docker")]),t._v("：\n"),r("ul",[r("li",[r("strong",[t._v("Pod")]),t._v("： "),r("code",[t._v("pod")]),t._v("中就是容器应用的副本")])])])]),t._v(" "),r("h2",{attrs:{id:"三、k8s三大基本核心概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、k8s三大基本核心概念"}},[t._v("#")]),t._v(" 三、K8s三大基本核心概念")]),t._v(" "),r("h3",{attrs:{id:"_1-pod-容器副本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-pod-容器副本"}},[t._v("#")]),t._v(" 1.Pod：容器副本")]),t._v(" "),r("ul",[r("li",[t._v("最小部署单元")]),t._v(" "),r("li",[t._v("一组容器的集合")]),t._v(" "),r("li",[t._v("共享网络")]),t._v(" "),r("li",[t._v("生命周期是短暂的")])]),t._v(" "),r("h3",{attrs:{id:"_2-controller-通过它来创建部署pod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-controller-通过它来创建部署pod"}},[t._v("#")]),t._v(" 2.Controller：通过它来创建部署pod")]),t._v(" "),r("ul",[r("li",[t._v("确保预期的pod副本数量")]),t._v(" "),r("li",[t._v("无状态应用部署")]),t._v(" "),r("li",[t._v("无状态其实就是这个pod副本可以直接用，不需要什么特定的约定")]),t._v(" "),r("li",[t._v("有状态应用部署")]),t._v(" "),r("li",[t._v("就是这个pod副本不能可以直接用（可能它依赖数据存储、网络ip唯一）")]),t._v(" "),r("li",[t._v("确保所有的node运行同一个pod")]),t._v(" "),r("li",[t._v("一次性任务和定时任务")])]),t._v(" "),r("h3",{attrs:{id:"_3-service-通过service来作为统一入口进行访问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-service-通过service来作为统一入口进行访问"}},[t._v("#")]),t._v(" 3.Service：通过service来作为统一入口进行访问")]),t._v(" "),r("ul",[r("li",[t._v("定义一组pod的访问规则")])]),t._v(" "),r("p",[r("code",[t._v("总结：通过service来作为统一入口进行访问，然后由controller去创建进行部署pod")])]),t._v(" "),r("h2",{attrs:{id:"四、如何从零搭建k8s集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、如何从零搭建k8s集群"}},[t._v("#")]),t._v(" 四、如何从零搭建k8s集群")]),t._v(" "),r("h3",{attrs:{id:"_1-搭建k8s环境平台规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-搭建k8s环境平台规划"}},[t._v("#")]),t._v(" 1.搭建k8s环境平台规划")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("单master集群\n"),r("img",{attrs:{src:"https://img-blog.csdnimg.cn/0f10ab89081040f597f897cd291e785c.png",width:"80%"}})])]),t._v(" "),r("li",[r("p",[t._v("多master集群（node和master的中间多了负载均衡）\n"),r("img",{attrs:{src:"https://img-blog.csdnimg.cn/34500064fda046818c7bc709b48717c2.png",width:"80%"}})])])]),t._v(" "),r("h3",{attrs:{id:"_2-服务器硬件配置要求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务器硬件配置要求"}},[t._v("#")]),t._v(" 2.服务器硬件配置要求")]),t._v(" "),r("ul",[r("li",[t._v("测试环境（master  2核4G  20G ；Node 4核8G   40G）---最低")]),t._v(" "),r("li",[t._v("生产环境（master  8核16G  100G ；Node  16核64G   500G）---最低")])]),t._v(" "),r("h3",{attrs:{id:"_3-搭建k8s集群部署方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-搭建k8s集群部署方式"}},[t._v("#")]),t._v(" 3.搭建k8s集群部署方式")]),t._v(" "),r("ul",[r("li",[t._v("基于客户端工具  "),r("a",{attrs:{href:"https://kubernetes.io/docs/reference/setup-tools/kubeadm",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubeadm"),r("OutboundLink")],1),t._v(" "),r("ul",[r("li",[t._v("kubeadm init  : 创建一个master节点")]),t._v(" "),r("li",[t._v("kubeadm join  <master节点的IP和端口>：将node节点加入到当前集群中")])])]),t._v(" "),r("li",[t._v("基于二进制包方式 （这个相对麻烦一些）")])]),t._v(" "),r("h3",{attrs:{id:"五、k8s的核心概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五、k8s的核心概览"}},[t._v("#")]),t._v(" 五、k8s的核心概览")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Pod")]),t._v("：最小单元")]),t._v(" "),r("li",[r("strong",[t._v("Controller")]),t._v("：控制层")]),t._v(" "),r("li",[r("strong",[t._v("Server、Ingress")]),t._v("：对外暴露端口")]),t._v(" "),r("li",[r("strong",[t._v("RBAS")]),t._v("：安全控制模型")]),t._v(" "),r("li",[r("strong",[t._v("Helm")]),t._v("：包管理工具")])]),t._v(" "),r("h3",{attrs:{id:"集群和分布式的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#集群和分布式的区别"}},[t._v("#")]),t._v(" 集群和分布式的区别")]),t._v(" "),r("p",[t._v("集群主要描述了一个集合，一些相似的东西，提供相似的功能，这个就叫做集群。而分布式，主要是将一个东西，分发给一堆相似的内容或东西。集群描述了受众的状态，也就是处理机不是单一体，是一个相似的个体组成的群体。分布式描述了源头的处理方式，是将单一源分发给多个处理机，而非单一处理机进行处理。\n当我们讲一个集群，我们着重描述这个处理机的静态状态，强调个体和群体之间的联系。\n当我们讲分布式系统，我们着重讲这个处理机的动态状态，强调请求和处理直接的分发状况。")])])}),[],!1,null,null,null);_.default=e.exports}}]);